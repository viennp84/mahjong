import request from 'request';
import RestfulModelCollection from './models/restful-model-collection';
import CalendarRestfulModelCollection from './models/calendar-restful-model-collection';
import ContactRestfulModelCollection from './models/contact-restful-model-collection';
import RestfulModelInstance from './models/restful-model-instance';
import Thread from './models/thread';
import { Contact } from './models/contact';
import Message from './models/message';
import Draft from './models/draft';
import File from './models/file';
import Calendar from './models/calendar';
import Event from './models/event';
import JobStatus from './models/job-status';
import Resource from './models/resource';
import Delta from './models/delta';
import { Label, Folder } from './models/folder';
export default class NylasConnection {
    accessToken: string | null | undefined;
    clientId: string | null | undefined;
    threads: RestfulModelCollection<Thread>;
    contacts: ContactRestfulModelCollection<Contact>;
    messages: RestfulModelCollection<Message>;
    drafts: RestfulModelCollection<Draft>;
    files: RestfulModelCollection<File>;
    calendars: CalendarRestfulModelCollection<Calendar>;
    jobStatuses: RestfulModelCollection<JobStatus>;
    events: RestfulModelCollection<Event>;
    resources: RestfulModelCollection<Resource>;
    deltas: Delta;
    labels: RestfulModelCollection<Label>;
    folders: RestfulModelCollection<Folder>;
    account: RestfulModelInstance;
    constructor(accessToken: string | null | undefined, { clientId }: {
        clientId: string | null | undefined;
    });
    requestOptions(options: {
        [key: string]: any;
    }): request.CoreOptions & request.UrlOptions & {
        downloadRequest: boolean;
    };
    _getWarningForVersion(sdkApiVersion?: string, apiVersion?: string): string;
    request(options?: Parameters<this['requestOptions']>[0]): Promise<any>;
}
