[{"/Users/viennguyen/project/mahjong/client/src/index.js":"1","/Users/viennguyen/project/mahjong/client/src/App.js":"2","/Users/viennguyen/project/mahjong/client/src/reportWebVitals.js":"3","/Users/viennguyen/project/mahjong/client/src/components/Login.js":"4","/Users/viennguyen/project/mahjong/client/src/components/Register.js":"5","/Users/viennguyen/project/mahjong/client/src/components/Home.js":"6","/Users/viennguyen/project/mahjong/client/src/components/TopMenu.js":"7","/Users/viennguyen/project/mahjong/client/src/components/Introduction.js":"8","/Users/viennguyen/project/mahjong/client/src/components/Scoring.js":"9","/Users/viennguyen/project/mahjong/client/src/components/Profile.js":"10","/Users/viennguyen/project/mahjong/client/src/components/UploadProfile.js":"11"},{"size":1293,"mtime":1612297390000,"results":"12","hashOfConfig":"13"},{"size":1452,"mtime":1612739317218,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":4546,"mtime":1612753568671,"results":"16","hashOfConfig":"13"},{"size":7820,"mtime":1612749726618,"results":"17","hashOfConfig":"13"},{"size":701,"mtime":1612753588885,"results":"18","hashOfConfig":"13"},{"size":1419,"mtime":1612751689096,"results":"19","hashOfConfig":"13"},{"size":3430,"mtime":1612741406199,"results":"20","hashOfConfig":"13"},{"size":4828,"mtime":1612751544726,"results":"21","hashOfConfig":"13"},{"size":17307,"mtime":1612748651138,"results":"22","hashOfConfig":"13"},{"size":4235,"mtime":1612755020716,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1qzmp4w",{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"27"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/viennguyen/project/mahjong/client/src/index.js",["54","55","56","57"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport reportWebVitals from './reportWebVitals';\n\n\nimport Login from './components/Login';\nimport Register from './components/Register';\n\n// //Import register component\n// const RegisterForm = () => \n// <div className=\"Register\">\n//   <Register/>\n// </div>;\n// //Import login component\n// const LoginForm = () => \n// <div className=\"Login\">\n//   <Login/>\n// </div>;\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Router>\n      <div className=\"login\">\n        <div className=\"Login\">\n        <Route path=\"/\" exact component={LoginForm} />\n        </div>\n\n        <div className=\"register\">\n        <Route path=\"/register/\" component={RegisterForm} />\n        </div> \n       \n        <Route path=\"/home/\" component={App} />\n      </div>\n    </Router> */}\n    <div><App></App></div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["58","59"],"/Users/viennguyen/project/mahjong/client/src/App.js",["60","61"],"import {BrowserRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/Login.css';\nimport './styles/Register.css';\nimport Login from './components/Login';\nimport Register from './components/Register';\nimport Home from './components/Home';\nimport Profile from './components/Profile';\nimport TopMenu from './components/TopMenu';\n\n//Import register component\nconst RegisterForm = () => \n<div className=\"Register\">\n  <Register/>\n</div>;\n//Import login component\nconst LoginForm = () => \n<div className=\"Login\">\n  <Login/>\n</div>;\n\nconst HomePage = () => \n<div className=\"Home\">\n  <Home/>\n</div>;\n\nconst ProfilePage = () => \n<div className=\"Profile\">\n  <Profile/>\n</div>;\n\n\n\n\nfunction App() {\n  //Render the home page from the home component\n  \n   return (\n    <Router>\n                         \n               <div>\n                    <TopMenu/>\n                </div> \n      <Switch>\n        <div>\n          <div>\n          <Route path=\"/\" exact component={LoginForm} />\n          </div>\n\n          <div>\n          <Route path=\"/register/\" component={RegisterForm} />\n          </div> \n        \n          <Route path=\"/home/\" component={HomePage} />\n\n          <div>\n          <Route path=\"/profile/\" component={ProfilePage} />\n          </div>\n        </div>\n      </Switch>\n    </Router>\n  );\n}\nexport default App;\n","/Users/viennguyen/project/mahjong/client/src/reportWebVitals.js",[],"/Users/viennguyen/project/mahjong/client/src/components/Login.js",["62","63"],"/Users/viennguyen/project/mahjong/client/src/components/Register.js",["64"],"import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\n\r\n/*  Vien Nguyen\r\n    CST-451 Mahjong Game Online\r\n    12/12/2020\r\n    Login class. \r\n    Register class. Handle data on the form controls. Validate input data\r\n*/\r\nclass Register extends React.Component{\r\n    //Constructor class\r\n    constructor(props){\r\n        super(props);\r\n        //Binding data changing whenever data is changed from the controls.\r\n        this.emailChangeHandler = this.emailChangeHandler.bind(this);\r\n        this.phoneChangeHandler = this.phoneChangeHandler.bind(this);\r\n        this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\r\n        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            message: '',\r\n        };\r\n    }\r\n    //Following methods are the support methods used to update the state if data on the control are changed.\r\n    //Handle email changed, update react State. \r\n    emailChangeHandler(event){\r\n        this.setState({email: event.target.value});\r\n    }\r\n    //Handle the phone changed, update State\r\n    phoneChangeHandler(event){\r\n        this.setState({phone: event.target.value});\r\n    }\r\n    //Handle the username change\r\n    usernameChangeHandler(event){\r\n        this.setState({username: event.target.value});\r\n    }\r\n    //Handle the password change\r\n    passwordChangeHandler(event){\r\n        this.setState({password: event.target.value});\r\n    }\r\n    //Handle submit even. Validate the entry data\r\n    handleSubmit(event, errors, values){\r\n        this.setState({errors, values});\r\n        if(errors.length > 0){\r\n            return;\r\n        }\r\n        //Create a user object with all neccessary data\r\n        const user ={\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            email: this.state.email,\r\n            phone: this.state.phone,\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        //submit data to register API, passing user data along with the API service\r\n        axios.post('http://localhost:3001/users/register', {user}).then(\r\n            res=>{\r\n                //Redirect the page after registered. \r\n                if(res.data.message === true){\r\n                   this.setState({redirect: true})\r\n                }\r\n                //Display username is not available for register\r\n                if(res.data.message === \"duplicatedUsername\"){\r\n                    this.setState({message: \"Username is not available\"})\r\n                }\r\n                //Display error email has been used for another account\r\n                if(res.data.message === \"duplicatedEmail\"){\r\n                    this.setState({message: \"Email has been used for another account\"})\r\n                }\r\n        })\r\n        .catch((err)=>{\r\n            console.log(err)\r\n        });\r\n    }\r\n    \r\n    render(){\r\n        const {redirect} = this.state;\r\n        //Redirect to login page after register.\r\n        if (redirect) {\r\n            return <Redirect to='/'/>;\r\n        }\r\n        //Render the register form.\r\n        return(\r\n            <div  class=\"form-group\">\r\n                \r\n                <AvForm  onSubmit={ this.handleSubmit }>\r\n                    <h2>Register</h2>\r\n                        <label style={{color: 'red'}}>{this.state.message}</label>\r\n                    <Row>\r\n                        <Col xs=\"12\" sm=\"6\">\r\n                            <AvField name=\"firstname\" label=\"First Name*\" value={this.state.firstName} \r\n                            type=\"text\"  onChange={this.firstNameChangeHandler} \r\n                            validate={{\r\n                                required: {value: true, errorMessage: 'Please enter first name'}\r\n                            }} />\r\n                        </Col>\r\n\r\n                        <Col xs=\"12\" sm=\"6\">\r\n                            <AvField name=\"lastname\" label=\"Last Name*\" value={this.state.email} \r\n                            type=\"text\"  onChange={this.lastNameChangeHandler}\r\n                            validate={{\r\n                                required: {value: true, errorMessage: 'Pleas enter your last name'}\r\n                            }} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs=\"12\" sm=\"6\">\r\n                            <AvField name=\"email\" label=\"Email*\" value={this.state.email} \r\n                            type=\"email\"  onChange={this.emailChangeHandler} errorMessage=\"Invalid email\"\r\n                            validate={{\r\n                                required: {value: true, errorMessage: \"Please enter your email\"}\r\n                            }} />\r\n                        </Col>\r\n                        <Col xs=\"12\" sm=\"6\">\r\n                            <AvField name=\"phone\" label=\"Phone*\" value={this.state.phone} onChange={this.phoneChangeHandler}  \r\n                            type=\"text\" errorMessage=\"Invalid phone number\" \r\n                            validate={{\r\n                                required: {value: true, errorMessage: \"Please enter phone number\"},\r\n                                tel: true\r\n                            }} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs=\"12\" sm=\"6\">\r\n                            <AvField name=\"username\" label=\"Username*\" value={this.state.username}  onChange={this.usernameChangeHandler}\r\n                            type=\"text\" \r\n                            validate={{\r\n                                required: {value: true, errorMessage: \"Please enter a username\"},\r\n                                pattern: {value: '^[A-Za-z0-9]+$', errorMessage: 'Your name must be composed only with letter and numbers'},\r\n                                minLength: {value: 3, errorMessage: 'Your name must be between 3 and 16 characters'},\r\n                                maxLength: {value: 25, errorMessage: 'Your name must be between 3 and 16 characters'}\r\n                            }} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs=\"12\" sm=\"6\">\r\n                            <AvField name=\"password\" label=\"Password*\" value={this.state.password}  onChange={this.passwordChangeHandler}\r\n                            type=\"password\"\r\n                            validate={{\r\n                                required: {value: true, errorMessage: 'Please enter your password'},\r\n                                minLength: {value: 8, errorMessage: 'Your password must be at least 8 characters'},\r\n                                maxLength: {value: 25}\r\n                            }} />\r\n                        </Col>\r\n                        <Col xs=\"12\" sm=\"6\">\r\n                            <AvField name=\"confirmationPassword\" label=\"Confirm Password*\" type=\"password\" \r\n                            validate={{\r\n                                required: {value: true, errorMessage: 'Please confirm your password'},\r\n                                match:{value:'password', errorMessage: 'Your confirm password does not match'}\r\n                                }} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Button color=\"primary\" >Sign Up</Button>\r\n                    <Link to=\"/\">Back to Log in</Link>\r\n                </AvForm >\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n//Export register component\r\nexport default Register;","/Users/viennguyen/project/mahjong/client/src/components/Home.js",["65"],"/Users/viennguyen/project/mahjong/client/src/components/TopMenu.js",["66","67"],"import React, { useState } from 'react';\r\nimport {BrowserRouter as Router, Route, Link} from \"react-router-dom\";\r\nimport {Collapse,Navbar,NavbarToggler,NavbarBrand,Nav,NavItem,NavLink} from 'reactstrap';\r\n\r\n/*  Vien Nguyen\r\n    CST-452 Mahjong Game Online\r\n    12/24/2020\r\n    Create a top menu using reactstrap.\r\n*/\r\nconst TopMenu = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const toggle = () => setIsOpen(!isOpen);\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <NavbarBrand href=\"/home/\">Home</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink>\r\n                  <Link to=\"/friend\">Friend</Link>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink>\r\n                  <Link to=\"/friend\">Room</Link>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink>\r\n                  <Link to=\"/game\">Game</Link>\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink>\r\n                  <Link to=\"/profile/\">Profile</Link>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n//Export Menu component\r\nexport default TopMenu;","/Users/viennguyen/project/mahjong/client/src/components/Introduction.js",["68"],"import React, { Component } from 'react';\r\nimport '../styles/Introduction.css';\r\nimport {Img} from 'react-image';\r\nimport Scoring from'./Scoring';\r\nimport MahjongSet from \"../images/mahjongset.jpg\";\r\n/*\r\nVien Nguyen\r\nCST-452 Senior Project II\r\nJanuary 10th/2020\r\nThis is the Introduction component. \r\nThe component is calling the API to get the data and display on the page\r\n*/\r\n//Introduction class\r\nclass Introduction extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //Using React state\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            //Store retutn data from the API\r\n            items: []\r\n        };\r\n    }\r\n    //componentDidMount is automatically run when first initiates rendering the page.\r\n    componentDidMount() {\r\n        //Get data from back end API\r\n        fetch(\"http://localhost:3001/users/introduce\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        //assigns result data to items variable of react state.\r\n                        items: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    //Rendering the html tag and condition with React Render\r\n    render() {\r\n        //Assigning the variable with react state.\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Error:{error.message}</div>\r\n        } else if (!isLoaded) {\r\n            return <div></div>;\r\n        } else {\r\n            return (\r\n                <div className=\"Introduction center\">\r\n                    <h1 className=\"center\">Welcome to Mahjong</h1>\r\n                    <p class=\"blocktext\">{items.data.result.welcome}</p>\r\n                    <h2>Players</h2>\r\n                    <p class=\"blocktext\">{items.data.result.players}</p>\r\n                    <h2>Components</h2>\r\n                    <div className=\"mahjongset\">\r\n                        {<Img src={MahjongSet}/>}\r\n                    </div>\r\n                    <p class=\"blocktext\">{items.data.result.components}</p>\r\n                    <h2>Goal</h2>\r\n                    <p class=\"blocktext\">{items.data.result.goal}</p>\r\n                    <h2>Setup</h2>\r\n                    <p class=\"blocktext\">{items.data.result.setup}</p>\r\n                    <h2>Play</h2>\r\n                    <p class=\"blocktext\">{items.data.result.play}</p>\r\n                    <h2>Kong</h2>\r\n                    <p class=\"blocktext\">{items.data.result.kong}</p>\r\n                    <h2>Hand End</h2>\r\n                    <p class=\"blocktext\">{items.data.result.handend}</p>\r\n                    <h2>Scoring</h2>\r\n                    <Scoring/>\r\n                    <h2>Game End</h2>\r\n                    <p class=\"blocktext\">{items.data.result.gameend}</p>\r\n                    <h1> Additional Notes:</h1>\r\n                    <p class=\"blocktext\">{items.data.result.additionalnote}</p>\r\n                    <h2>CHARLESTON:</h2><p class=\"blocktext\">{items.data.result.charleston}</p>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n//Export component for reused\r\nexport default Introduction;","/Users/viennguyen/project/mahjong/client/src/components/Scoring.js",["69"],"import React, { Component } from 'react';\r\nimport {Img} from 'react-image';\r\nimport '../styles/Introduction.css';\r\n//Import the mahong images for the Bamboo set\r\nimport OneBam from \"../images/1-bam.png\";\r\nimport TwoBam from \"../images/2-bam.png\";\r\nimport ThreeBam from \"../images/3-bam.png\";\r\nimport FourBam from \"../images/4-bam.png\";\r\nimport FiveBam from \"../images/5-bam.png\";\r\nimport SixBam from \"../images/6-bam.png\";\r\nimport SevenBam from \"../images/7-bam.png\";\r\nimport EightBam from \"../images/8-bam.png\";\r\nimport NineBam from \"../images/9-bam.png\";\r\n//Import the mahjong images for the Dot set\r\nimport OneDot from \"../images/1-dot.png\";\r\nimport TwoDot from \"../images/2-dot.png\";\r\nimport ThreeDot from \"../images/3-dot.png\";\r\nimport FourDot from \"../images/4-dot.png\";\r\nimport FiveDot from \"../images/5-dot.png\";\r\nimport SixDot from \"../images/6-dot.png\";\r\nimport SevenDot from \"../images/7-dot.png\";\r\nimport EightDot from \"../images/8-dot.png\";\r\nimport NineDot from \"../images/9-dot.png\";\r\n//Import the mahjong images for the Chrac set.\r\nimport OneChrac from \"../images/1-chrac.png\";\r\nimport TwoChrac from \"../images/2-chrac.png\";\r\nimport ThreeChrac from \"../images/3-chrac.png\";\r\nimport FourChrac from \"../images/4-chrac.png\";\r\nimport FiveChrac from \"../images/5-chrac.png\";\r\nimport SixChrac from \"../images/6-chrac.png\";\r\nimport SevenChrac from \"../images/7-chrac.png\";\r\nimport EightChrac from \"../images/8-chrac.png\";\r\nimport NineChrac from \"../images/9-chrac.png\";\r\n//Import the Dragon set and Wind set\r\nimport RedDragon from \"../images/redDragon.png\";\r\nimport GreenDragon from \"../images/greenDragon.png\";\r\nimport WhiteDragon from \"../images/whiteDragon.png\";\r\nimport WestWind from \"../images/westWind.png\";\r\nimport EastWind from \"../images/eastWind.png\";\r\nimport SouthWind from \"../images/southWind.png\";\r\nimport NorthWind from \"../images/northWind.png\";\r\n//Import the flower set.\r\nimport Spring from \"../images/spring.png\";\r\nimport Summer from \"../images/summer.png\";\r\nimport Autumn from \"../images/autumn.png\";\r\nimport Winter from \"../images/winter.png\";\r\nimport Plum from \"../images/plum.png\";\r\nimport Orchid from \"../images/orchid.png\";\r\nimport Bamboo from \"../images/bamboo.png\";\r\nimport Chrysanthemum from \"../images/chrysanthemum.png\";\r\n/*  Vien Nguyen\r\n    CST-452 Mahjong Game Online\r\n    01/01/2020\r\n    Scoring class. Display the rules how to score the game and images for demonstration.\r\n*/\r\nclass Scoring extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //Import the image collection into the state.\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: [],\r\n            images:[\r\n            OneBam,TwoBam,ThreeBam,FourBam,FiveBam,SixBam,SevenBam,EightBam,NineBam,\r\n            OneChrac,TwoChrac,ThreeChrac,FourChrac,FiveChrac,SixChrac,SevenChrac,EightChrac,NineChrac,\r\n            OneDot,TwoDot,ThreeDot,FourDot,FiveDot,SixDot,SevenDot,EightDot,NineDot,\r\n            RedDragon,WhiteDragon,GreenDragon,\r\n            EastWind,SouthWind,WestWind,NorthWind,\r\n            Spring,Summer,Autumn,Winter,\r\n            Plum,Orchid,Bamboo,Chrysanthemum\r\n        ]\r\n\r\n        };\r\n    }\r\n    //Get the scoring data from the scoring API.\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:3001/users/scoring\")\r\n            .then(res => res.json())\r\n            .then(\r\n                //Assign the result of calling scoring API to items variable \r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    //Reder the score description and the images with each rule.\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Error:{error.message}</div>\r\n        } else if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        } else {\r\n            return (\r\n                <div>   \r\n                    {items.data.result.map(item => (\r\n                        <p key={item.id}>\r\n                           <h3> {item.name}  <p class=\"p.blocktext\">Score:{item.score}</p></h3> \r\n                            <p class=\"blocktext\">{item.description} </p>\r\n                            <div class=\"tile\">\r\n                                {Array.from(item.tiles.split(',')).map((im)=><Img src={im}/>)}\r\n                            </div>\r\n                        </p>\r\n                    ))}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n//Export the Scoring component.\r\nexport default Scoring;","/Users/viennguyen/project/mahjong/client/src/components/Profile.js",["70","71","72","73"],"import React, { Children, Component } from 'react';\nimport '../styles/Introduction.css';\nimport axios from 'axios';\nimport { Link, Redirect } from \"react-router-dom\";\nimport {Card, Button, Row, Col, CardHeader, CardBody, Label } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport UploadProfile from \"./UploadProfile\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/Profile.css';\n/*\nVien Nguyen\nCST-452 Senior Project II\nFeb 1st/2020\nProfile component. It contains user personal information as first name,\nlast nane, phone, email, profile image\n*/\nclass Profile extends React.Component {\n    //Declare react constructor and state.\n    constructor(props) {\n        super(props);\n       //Binding betwwen state and controls\n        this.firstNameChangeHandler = this.firstNameChangeHandler.bind(this);\n        this.lastNameChangeHandler = this.lastNameChangeHandler.bind(this);\n        this.emailChangeHandler = this.emailChangeHandler.bind(this);\n        this.phoneChangeHandler = this.phoneChangeHandler.bind(this);\n        this.updateOnClick = this.updateOnClick.bind(this);\n        this.cancelUpdateOnClick = this.cancelUpdateOnClick.bind(this);\n        this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n        this.state = {\n            error: null,\n            userProfile: null,\n            update: false,\n        };\n    }\n    //Update firstname, lastname, email, phone when stage on controls are changed.\n    //Update firstname\n    firstNameChangeHandler(event) {\n        this.setState({ firstname: event.target.value });\n    }\n    //update lastname\n    lastNameChangeHandler(event) {\n        this.setState({ lastname: event.target.value });\n    }\n    //update email\n    emailChangeHandler(event) {\n        this.setState({ email: event.target.value });\n    }\n    //update phone\n    phoneChangeHandler(event) {\n        this.setState({ phone: event.target.value });\n    }\n    //Event update on click will set update value and show update form.\n    updateOnClick(value) {\n        this.setState({ update: value });\n    }\n    //Event cancel will set update to false and return to profile page\n    cancelUpdateOnClick() {\n        this.setState({ update: false });\n    }\n    //Handle update event, take the data from control, create user object and call updateProfile\n    //service from API.\n    handleUpdateSubmit(event, errors, values) {\n        this.setState({ errors, values });\n        if (errors.length > 0) {\n            return;\n        }\n        //Initiate a user object\n        const user = {\n            userId: event.target.elements.userId.value,\n            firstname: event.target.elements.firstname.value,\n            lastname: event.target.elements.lastname.value,\n            email: event.target.elements.email.value,\n            phone: event.target.elements.phone.value\n        }\n        /*--------------------------------------------------*/\n        /*The update take userId as the preference for updating.*/\n        /*Currently, hard code the userId*/\n        //Send user object to update profile controller\n        axios.post('http://localhost:3001/users/updateProfile', { user }).then(\n            res => {\n                if (res.data.message.msg === true) {\n                    console.log(res.data.message.msg);\n                    this.setState({\n                        isLoaded: true\n                    });\n                    //Get back the data updated in the database from calling API so that it indicates the latest data.\n                    fetch(\"http://localhost:3001/users/profile/98\")\n                        .then(res => res.json())\n                        .then(\n                            (result) => {\n                                this.setState({\n                                    isLoaded: true,\n                                    userProfile: result,\n                                    update: false\n                                });\n                            },\n                            (error) => {\n                                this.setState({\n                                    isLoaded: true,\n                                    error\n                                });\n                            }\n                        )\n                }\n            })\n            .catch((err) => {\n                console.log(err)\n            });\n    }\n    //Initatial data on the profile page.\n    componentDidMount() {\n        fetch(\"http://localhost:3001/users/profile/98\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        userProfile: result,\n                        update: false\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n    //Render page with condition. if update state is true, display the update form. Otherwise, showing the profile information.\n    render() {\n        //Declare and assign the variables for redering data on the form.\n        const { error, isLoaded, userProfile, update } = this.state;\n        if (error) {\n            return <div>Error:{error.message}</div>\n        } else if (!isLoaded) {\n            return <div>Loading profile....</div>;\n        } else if (update) {\n            return (\n                <div className=\"container\" style={{ paddingTop: 30 }}>\n                    <Row>\n                        <Col sm={12}>\n                            <Card>\n                                <CardHeader>\n                                    Update personal profile\n                                </CardHeader>\n                                <CardBody>\n                                    <Row>\n                                        <Col sm={12} style={{ paddingTop: 30 }}>\n                                            {userProfile.data.result.map(user => (\n\n                                                <AvForm onSubmit={this.handleUpdateSubmit} className=\"form-update\">\n                                                    <h2>Update Profile</h2>\n                                                    <label style={{ color: 'red' }}>{this.state.message}</label>\n                                                    <Row>\n                                                        <AvField name=\"userId\" hidden=\"true\" value={user.userId} />\n                                                        <Col xs=\"8\">\n                                                            <AvField name=\"firstname\" label=\"First Name*\" value={user.firstname}\n                                                                type=\"text\" onChange={this.firstNameChangeHandler}\n                                                                validate={{\n                                                                    required: { value: true, errorMessage: 'Please enter first name' }\n                                                                }} />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col xs=\"8\">\n                                                            <AvField name=\"lastname\" label=\"Last Name*\" value={user.lastname}\n                                                                type=\"text\" onChange={this.lastNameChangeHandler}\n                                                                validate={{\n                                                                    required: { value: true, errorMessage: 'Pleas enter your last name' }\n                                                                }} />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col xs=\"8\">\n                                                            <AvField name=\"email\" label=\"Email*\" value={user.email}\n                                                                type=\"email\" onChange={this.emailChangeHandler} errorMessage=\"Invalid email\"\n                                                                validate={{\n                                                                    required: { value: true, errorMessage: \"Please enter your email\" }\n                                                                }} />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col xs=\"8\">\n                                                            <AvField name=\"phone\" label=\"Phone*\" value={user.phone} onChange={this.phoneChangeHandler}\n                                                                type=\"text\" errorMessage=\"Invalid phone number\"\n                                                                validate={{\n                                                                    required: { value: true, errorMessage: \"Please enter phone number\" },\n                                                                    tel: true\n                                                                }} />\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <UploadProfile /></Row>\n                                                    <Row>\n                                                        <Col xs=\"4\">\n                                                            <Button color=\"primary btn-update\" >Update</Button>\n                                                        </Col>\n                                                        <Col xs=\"4\">\n                                                            <Button color=\"primary btn-cancel\" onClick={this.cancelUpdateOnClick}>Cancel</Button>\n                                                        </Col>\n                                                        \n                                                    </Row>\n                                                </AvForm >\n                                            )\n                                            )}\n                                        </Col>\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    </Row>\n                </div>\n            );\n        } else {\n            //Render the personal profile page\n            return (\n                <div className=\"container\" style={{ paddingTop: 30 }}>\n                    <Row>\n                        <Col sm={12}>\n                            <Card>\n                                <CardHeader>\n                                    Personal profile\n                                </CardHeader>\n                                <CardBody>\n                                    {/* <Row><UploadProfile /></Row> */}\n                                    <Row>\n                                        <Col sm={12} style={{ paddingTop: 30 }}>\n                                            {userProfile.data.result.map(user => (\n\n                                                <div key={user.userId}>\n                                                    <Row>\n                                                        <img className=\"avatar-img\" src={'http://localhost:3001/users/avatar/' + user.image.split('/')[1]} alt=\"\" />\n                                                    </Row>\n                                                    <Row>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"won-games\" className=\"lb-text\">Total games won</Label>\n                                                        </Col>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"won-game\">{user.wonGames}</Label>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"total-games\" className=\"lb-text\">Total games played</Label>\n                                                        </Col>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"total-game\">{user.totalGames}</Label>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"won-games\" className=\"lb-text\">Your balance </Label>\n                                                        </Col>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"total-game\">{user.score}</Label>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"firstname\" className=\"lb-text\">First Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"firstname\">{user.firstname}</Label>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"lastname\" className=\"lb-text\">Last Name</Label>\n                                                        </Col>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"lastname\" >{user.lastname}</Label>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"email\" className=\"lb-text\">Email</Label>\n                                                        </Col>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"email\" >{user.email}</Label>\n                                                        </Col>\n                                                    </Row>\n                                                    <Row>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"phone\" className=\"lb-text\">Phone Number</Label>\n                                                        </Col>\n                                                        <Col xs=\"4\">\n                                                            <Label for=\"phone\">{user.phone}</Label>\n                                                        </Col>\n                                                    </Row>\n\n                                                    <Row>\n                                                        <Col xs=\"4\">\n                                                        </Col>\n                                                        <Col xs=\"4\">\n                                                            <Button color=\"info\" onClick={this.updateOnClick}>Update</Button>\n\n                                                        </Col>\n                                                    </Row>\n                                                </div>\n                                            ))}\n\n                                        </Col>\n                                    </Row>\n                                    <Row>\n\n                                    </Row>\n                                </CardBody>\n                            </Card>\n                        </Col>\n\n                    </Row>\n                </div>\n            );\n        }\n    }\n}\n//Export Profile component\nexport default Profile;","/Users/viennguyen/project/mahjong/client/src/components/UploadProfile.js",["74","75"],{"ruleId":"76","severity":1,"message":"77","line":6,"column":26,"nodeType":"78","messageId":"79","endLine":6,"endColumn":32},{"ruleId":"76","severity":1,"message":"80","line":6,"column":34,"nodeType":"78","messageId":"79","endLine":6,"endColumn":39},{"ruleId":"76","severity":1,"message":"81","line":10,"column":8,"nodeType":"78","messageId":"79","endLine":10,"endColumn":13},{"ruleId":"76","severity":1,"message":"82","line":11,"column":8,"nodeType":"78","messageId":"79","endLine":11,"endColumn":16},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"76","severity":1,"message":"87","line":1,"column":49,"nodeType":"78","messageId":"79","endLine":1,"endColumn":57},{"ruleId":"76","severity":1,"message":"88","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":16},{"ruleId":"76","severity":1,"message":"89","line":2,"column":17,"nodeType":"78","messageId":"79","endLine":2,"endColumn":26},{"ruleId":"76","severity":1,"message":"90","line":4,"column":18,"nodeType":"78","messageId":"79","endLine":4,"endColumn":22},{"ruleId":"76","severity":1,"message":"89","line":2,"column":17,"nodeType":"78","messageId":"79","endLine":2,"endColumn":26},{"ruleId":"76","severity":1,"message":"89","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":2,"column":26,"nodeType":"78","messageId":"79","endLine":2,"endColumn":32},{"ruleId":"76","severity":1,"message":"80","line":2,"column":34,"nodeType":"78","messageId":"79","endLine":2,"endColumn":39},{"ruleId":"76","severity":1,"message":"89","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"89","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"91","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"89","line":1,"column":27,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"92","line":4,"column":10,"nodeType":"78","messageId":"79","endLine":4,"endColumn":14},{"ruleId":"76","severity":1,"message":"87","line":4,"column":16,"nodeType":"78","messageId":"79","endLine":4,"endColumn":24},{"ruleId":"76","severity":1,"message":"93","line":6,"column":8,"nodeType":"78","messageId":"79","endLine":6,"endColumn":13},{"ruleId":"76","severity":1,"message":"94","line":6,"column":23,"nodeType":"78","messageId":"79","endLine":6,"endColumn":26},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"'Redirect' is defined but never used.","'ReactDOM' is defined but never used.","'Component' is defined but never used.","'Card' is defined but never used.","'Children' is defined but never used.","'Link' is defined but never used.","'axios' is defined but never used.","'get' is defined but never used.","no-global-assign","no-unsafe-negation"]